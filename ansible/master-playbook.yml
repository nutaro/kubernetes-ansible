---
- hosts: all
  become: true
  environment:
    KUBECONFIG: "/home/vagrant/.kube/config"
  tasks:
  - include_vars: vars/vars.yml
  - name: Install necessary packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common 
      - gnupg2
      - net-tools
      - unzip

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet={{ kubernetes_version }}
        - kubeadm={{ kubernetes_version }}
        - kubectl={{ kubernetes_version }}

  - name: Enable kernel modules
    shell: |
      modprobe overlay
      modprobe br_netfilter

  - name: Configure IP forwarding and iptables
    blockinfile:
      create: true
      path: /etc/sysctl.conf
      block: |
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Persist changes
    command: sysctl -p

  - name: Get IP enp0s8 addr
    shell: ip -4 address show enp0s8 | awk 'NR==2{ sub(/^[^0-9]*/, "", $2); printf "%s\n", $2; exit }' | sed -r 's/\/24//'
    register: output

  - name: Get Hostname
    shell: hostname -s
    register: host

  - include_tasks: tasks/binaries.yml
  - include_tasks: cri-containerd.yml

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{ output.stdout }}" --control-plane-endpoint="{{ output.stdout }}" --apiserver-cert-extra-sans="{{ output.stdout }}" --node-name="{{ host.stdout }}" --pod-network-cidr=172.16.0.0/16

  - name: Create kube directory
    file:
      path: /home/vagrant/.kube
      state: directory

  - name: Setup kubeconfig for vagrant user
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      remote_src: yes
      owner: vagrant
      group: root
      mode: '0644'

  - include_tasks: tasks/calico.yml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  handlers:
  - name: restart containerd
    service:
      name: containerd
      state: restarted